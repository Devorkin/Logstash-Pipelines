filter {
  if [type] == "Meraki" {
    grok {
      match   =>    { "message"   =>    "%{SYSLOGPROG} %{BASE10NUM:epoch_time} %{USERNAME:ap} %{GREEDYDATA:DATA}" }
    }
    mutate  {
      remove_field    =>    "message"
      remove_field    =>    "@version"
      remove_field    =>    "epoch_time"
      remove_field    =>    "program"
    }
  }

  if "Flows" in [tags] {
    grok {
      match   =>  [
        "DATA", "flows %{WORD:action} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:src_mac} protocol=%{WORD:proto} (?:sport=%{POSINT:src_port} dport=%{POSINT:dst_port})?(?:type=%{INT:Protocol_type})?",
        "DATA", "flows %{WORD:action} src=%{IPV6:src_ip} dst=%{IPV6:dst_ip} mac=%{COMMONMAC:src_mac} protocol=%{WORD:proto}(?:\ )?(?:sport=%{POSINT:src_port} dport=%{POSINT:dst_port})?(?:type=%{INT:Protocol_type})?",
	      "DATA", "flows %{WORD:action} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:src_mac} protocol=%{INT:ProtocolNum}"
      ]
    }
    mutate {
      remove_field => [ "DATA" ]
    }
  }
  else if "Air_Marshall" in [tags] {
    if "type=containing_device" in [DATA] {
      grok {
        match => { "DATA" => "airmarshal_events type=containing_device ssid='%{WORD:SSID}' bssid='%{COMMONMAC:AP_MAC}' src='%{COMMONMAC:SRC_MAC}' dst='%{COMMONMAC:DST_MAC}' wired_mac='' vlan_id='(?:%{INT:VLAN})?' channel='%{INT:Channel}' rssi='%{INT:RSSI}' fc_type='%{INT:FC_Type}' fc_subtype='%{INT:Sub_Type}'" }
      }
      mutate {
        add_field   =>  { "tags"  =>  "Containing" }
        remove_field => [ "DATA" ]
      }
    }
    else {
      grok {
        match   =>   {  "DATA" => "%{GREEDYDATA:Other_contents}"  }
      }
      mutate {
        add_field   =>  { "tags"  =>  "Development" }
        # remove_field => [ "DATA" ]
      }
    }
  }
  else if "Firewall" in [tags] {
    if "type=disassociation" in [DATA] {
      grok {
        match   =>   [
          "DATA", "events type=disassociation(:? radio='%{INT:Radio}')?(:? vap='%{INT:Vap}')?(:? client_mac='%{COMMONMAC:Client_MAC}')?(:? client_ip='%{IPV4:Client_IP}')?(:? channel='%{INT:Channel}')?(:? reason='%{INT:Reason}')?(:? apple_da_reason='%{INT:Apple_DA_Reason}')?(:? instigator='%{INT:Instigator}')?(:? duration='%{BASE10NUM:Duration}')?(:? auth_neg_dur='%{BASE10NUM:Auth_Negotiation_Durration}')?(:? last_auth_ago='%{BASE10NUM:Last_Auth_Ago}')?(:? is_wpa='%{INT:Is_WPA}')?(:? full_conn='%{BASE10NUM:Full_Connection}')?(:? ip_resp='%{BASE10NUM:IP_Response}')?(:? ip_src='%{IPV4:SRC_IP}')?(:? http_resp='%{BASE10NUM:HTTP_Response}')?(:? arp_resp='%{BASE10NUM:ARP_Response}')?(:? arp_src='%{IPV4:SRC_ARP}')?(:? dns_server='%{IPV4:DNS_Server}')?(:? dns_req_rtt='%{BASE10NUM:DNS_Req_RTT}')?(:? dns_resp='%{BASE10NUM:DNS_Response}')?(:? arp_request_failed='1')?(:? arp_request_ip='192.168.200.5')?(:? dhcp_lease_completed='%{BASE10NUM:DHCP_Lease_Completed}')?(:? dhcp_ip='%{IPV4:DHCP_IP}')?(:? dhcp_server='%{IPV4:DHCP_Server}')?(:? dhcp_server_mac='%{COMMONMAC:DHCP_Server_MAC}')?(:? dhcp_resp='%{BASE10NUM:DHCP_Response}')?(:? aid='%{INT:AID}')?"
        ]
      }
      mutate {
        add_field   =>  { "tags"  =>  "AP Disassociation" }
        remove_field => [ "DATA" ]
      }
    }
    else if "type=association" in [DATA] {
      grok {
        match => [
          "DATA", "events type=association radio='%{INT:Radio}' vap='%{INT:Vap}' client_mac='%{COMMONMAC:Client_MAC}' client_ip='%{IPV4:Client_IP}' channel='%{INT:Channel}' rssi='%{INT:RSSI}' aid='%{INT:AID}'"
        ]
      }
      mutate {
        add_field   =>  { "tags"  =>  "AP Association" }
        remove_field => [ "DATA" ]
      }
    }
    else if "type=wpa_auth" in [DATA] {
      grok {
        match   =>   {  "DATA" => "events type=wpa_auth radio='%{INT:Radio}' vap='%{INT:VAP}' client_mac='%{COMMONMAC:Client_MAC}' client_ip='%{IPV4:Client_IP}' aid='%{INT:AID}'"  }
      }
      mutate {
        add_field   =>  { "tags"  =>  "WPA Authentication" }
        remove_field => [ "DATA" ]
      }
    }
    else {
      grok {
        match   =>   {  "DATA" => "%{GREEDYDATA:Other_contents}"  }
      }
      mutate {
        add_field   =>  { "tags"  =>  "Development" }
        remove_field => [ "DATA" ]
      }
    }
  }
  else if "URLs" in [tags] {
    grok {
      match => [ 
        "DATA", "urls (src=)%{IPV4:src_ip}:%{INT:src_port} (dst=)%{IP:dst_ip}:%{INT:dst_port} (mac=)%{MAC:src_mac} (request: )%{WORD:request} %{URIPROTO:uri_proto}://(?:%{USER:user}(?::[^@]*)?@)?(?:%{URIHOST:uri_domain})?(?:%{URIPATHPARAM:uri_param})?",
        "DATA", "urls (src=)%{IPV4:src_ip}:%{INT:src_port} (dst=)%{IP:dst_ip}:%{INT:dst_port} (mac=)%{MAC:src_mac} (?:agent=%{QS:agent}) (request: )%{WORD:request} %{URIPROTO:uri_proto}://(?:%{USER:user}(?::[^@]*)?@)?(?:%{URIHOST:uri_domain})?(?:%{URIPATHPARAM:uri_param})?"
      ]
    }
    mutate {
     gsub => [ "message", "\"", "'" ]
      remove_field => [ "@version", "port", "host", "program", "epoch_time" ]
      remove_field => [ "DATA" ]
    }
  }
}
